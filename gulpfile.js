'use strict';
var gulp = require('gulp');
var ejs = require('ejs');
var fs = require('fs');
var insert = require('gulp-insert');
var jshint = require('gulp-jshint');
var nodeunit = require('gulp-nodeunit');
var size = require('gulp-size');
var uglify = require('gulp-uglify');
var reactify = require('reactify');
var rename = require('gulp-rename');
var through2 = require('through2');
var browserify = require('browserify');

var getPackage = function () {
	return JSON.parse(fs.readFileSync('./package.json', 'utf-8'));
};

var getHeader = function () {
	return ejs.render(fs.readFileSync('./userscript.header.ejs', 'utf-8'), getPackage());
};

var displaySize = function (title) {
	return size({
		title: title || '',
		showFiles: true
	});
};

gulp.task('plugins', function () {
	var plugins = [];
	var contents = [
		'/* autogenerated by running `gulp plugins` (see gulpfile.js) */',
		'"use strict";'
	];
	fs.readdirSync('./lib/plugins').forEach(function (file) {
		file = file.replace('.js', '');
		plugins.push(file);
		contents.push('exports["' + file + '"] = require("../plugins/' + file + '");');
	});
	contents.push('exports.pluginNames = ' + JSON.stringify(plugins) + ';\n');
	fs.writeFileSync('./lib/core/plugins.js', contents.join('\n'), 'utf-8');
});

gulp.task('userscript', function () {
	var header = getHeader() + '\n\n';
	return gulp.src('./lib/index.js')
		.pipe(through2.obj(function (file, enc, next) {
			browserify(file.path)
			.transform('reactify')
			.bundle(function (err, res) {
				// assumes file.contents is a Buffer
				file.contents = res;
				next(null, file);
			});
		}))
		.pipe(rename('github-enhancement-suite.debug.user.js'))
		.pipe(insert.prepend(header))
		.pipe(gulp.dest('./build/'))
		.pipe(displaySize('Userscript (Debug)'))
		.pipe(uglify({output:{max_line_len: 80}}))
		.pipe(rename('github-enhancement-suite.user.js'))
		.pipe(insert.prepend(header))
		.pipe(gulp.dest('./build/'))
		.pipe(displaySize('Userscript (Minified)'));
});

gulp.task('lint', function () {
	gulp.src(['./lib/**/*.js', './test/**/*.js'])
		.pipe(jshint())
		.pipe(jshint.reporter('default'));
});

gulp.task('test', function () {
	gulp.src('test.js')
		.pipe(nodeunit());
});

gulp.task('watch', function () {
	gulp.watch(['./lib/**/*.js', './test/**/*.js'], ['lint', 'plugins', 'userscript', 'test']);
});

// setup default task
gulp.task('default', ['lint', 'plugins', 'userscript', 'test', 'watch']);

// handle errors
process.on('uncaughtException', function (e) {
	console.error(e);
});
